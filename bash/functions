#!/bin/bash
# Create a new directory and enter it
function md() {
	mkdir -p "$@" && cd "$@"
}

# Colored svn diff in a pager
svndiff () {
	svn diff "${@}" | colordiff | less -R
}

# create a patch file to load again later
makediff () {
	svn diff --diff-cmd=diff > ~/diffs/"${@}".diff
}

# find shorthand
function f() {
    find . -name "$1"
}

# Quickly change what branch sandbox is pointing to
function workon() {
	if test ! -d "$SANDBOX/public.$1"
	then
		echo "public.$1: Does not exist" >&2
		return
	fi
	cd $SANDBOX
	echo "`date` workon $@" >> ~/work.log
	rm public
	ln -s public.$1 public
	cd -P public
	ctags &
	pwd
}
if [ -d "$SANDBOX/svn" ]; then
	complete -W "$(echo `ls $SANDBOX/svn`)" workon
fi

_complete_ssh_hosts ()
{
        COMPREPLY=()
        cur="${COMP_WORDS[COMP_CWORD]}"
        comp_ssh_hosts=`cat ~/.ssh/known_hosts | \
                        cut -f 1 -d ' ' | \
                        sed -e s/,.*//g | \
                        grep -v ^# | \
                        uniq | \
                        grep -v "\[" ;
                if [ -f ~/.ssh/config ]; then
                        cat ~/.ssh/config | \
                                grep "^Host " | \
                                awk '{print $2}'
                fi
                `
        COMPREPLY=( $(compgen -W "${comp_ssh_hosts}" -- $cur))
        return 0
}
complete -F _complete_ssh_hosts ssh

# Fix ssh keys in screen
# http://www.tolaris.com/2011/07/12/reconnecting-your-ssh-agent-to-a-detached-gnu-screen-session/
function ssh-reagent () {
  export SSH_AUTH_SOCK=$(find /tmp/ssh-* -user `whoami` -name agent\* -printf '%T@ %p\n' 2>/dev/null | sort -k 1nr | sed 's/^[^ ]* //' | head -n 1)
  if ssh-add -l 2>&1 > /dev/null; then
    echo Found working SSH Agent:
    ssh-add -l
    return
  fi
  echo Cannot find ssh agent - maybe you should reconnect and forward it?
}

# `shellswitch [bash |zsh]`
#   Must be in /etc/shells
shellswitch () {
	chsh -s $(brew --prefix)/bin/$1
}
